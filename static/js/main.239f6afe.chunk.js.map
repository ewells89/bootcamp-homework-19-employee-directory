{"version":3,"sources":["components/EmployeeTable/EmployeeTable.jsx","App.js","reportWebVitals.js","index.js"],"names":["EmployeeTable","useState","users","setUsers","sortDirection","setSortDirection","searchTerm","setSearchTerm","usersToDisplay","setUsersToDisplay","useEffect","axios","get","then","response","data","results","sortLastNameDesc","usersSpread","sort","a","b","nameA","name","last","nameB","sortLastNameAsc","className","onSubmit","e","preventDefault","filteredUsers","filter","user","phone","includes","type","placeholder","value","onChange","target","scope","onClick","map","id","src","picture","thumbnail","alt","first","email","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAmHeA,EAhHO,WAAO,IAAD,EACAC,mBAAS,IADT,mBACnBC,EADmB,KACZC,EADY,OAEgBF,mBAAS,OAFzB,mBAEnBG,EAFmB,KAEJC,EAFI,OAGUJ,mBAAS,IAHnB,mBAGnBK,EAHmB,KAGPC,EAHO,OAIkBN,mBAAS,IAJ3B,mBAInBO,EAJmB,KAIHC,EAJG,KAM1BC,qBAAU,WACRC,IAAMC,IAAI,0CAA0CC,MAAK,SAACC,GACxDX,EAASW,EAASC,KAAKC,SACvBP,EAAkBK,EAASC,KAAKC,cAEjC,IAEH,IAUMC,EAAmB,WACvB,IAAMC,EAAW,YAAOhB,GACxBgB,EAAYC,MAAK,SAACC,EAAGC,GACnB,IAAMC,EAAQF,EAAEG,KAAKC,KACfC,EAAQJ,EAAEE,KAAKC,KAErB,OAAIF,EAAQG,GAAe,EACvBH,EAAQG,EAAc,EACnB,KAEThB,EAAkBS,IAGdQ,EAAkB,WACtB,IAAMR,EAAW,YAAOhB,GACxBgB,EAAYC,MAAK,SAACC,EAAGC,GACnB,IAAMC,EAAQF,EAAEG,KAAKC,KACfC,EAAQJ,EAAEE,KAAKC,KAErB,OAAIF,EAAQG,GAAe,EACvBH,EAAQG,EAAc,EACnB,KAEThB,EAAkBS,IAapB,OACE,gCACE,qBAAKS,UAAU,WAAf,SACI,uBAAMC,SAbO,SAACC,GAClBA,EAAEC,iBACJ,IAAMC,EAAgB7B,EAAM8B,QAAO,SAACC,GAChC,OAAOA,EAAKC,MAAMC,SAAS7B,MAE/BG,EAAkBsB,IAQZ,UACE,uBACAK,KAAK,OACLC,YAAY,yBACZd,KAAK,aACLe,MAAOhC,EACPiC,SAAU,SAACV,GACPtB,EAAcsB,EAAEW,OAAOF,UAG3B,wBAAQX,UAAU,sBAAlB,yBAGN,8BACE,wBAAOA,UAAU,iCAAjB,UACE,gCACE,+BACE,oBAAIc,MAAM,MAAV,gBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAMC,QArEP,WACG,QAAlBtC,GACFsB,IACArB,EAAiB,UAEjBY,IACAZ,EAAiB,SA+DT,kBAGA,oBAAIoC,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,wBAGJ,gCACGjC,EAAemC,KAAI,SAACV,GAAD,OAClB,+BACE,oBAAIQ,MAAM,MAAV,SAAiBR,EAAKW,GAAGN,QACzB,6BACE,qBACEO,IAAKZ,EAAKa,QAAQC,UAClBC,IAAI,yBAGR,6BAAKf,EAAKV,KAAK0B,QACf,6BAAKhB,EAAKV,KAAKC,OACf,6BAAKS,EAAKiB,QACV,6BAAKjB,EAAKC,UAXJ,uBCpFPiB,MATf,WACE,OACE,qBAAKxB,UAAU,YAAf,SACE,cAAC,EAAD,OCQSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.239f6afe.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst EmployeeTable = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [sortDirection, setSortDirection] = useState(\"asc\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [usersToDisplay, setUsersToDisplay] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://randomuser.me/api/?results=100\").then((response) => {\r\n      setUsers(response.data.results);\r\n      setUsersToDisplay(response.data.results);\r\n    });\r\n  }, []);\r\n\r\n  const sortLastName = () => {\r\n    if (sortDirection === \"asc\") {\r\n      sortLastNameAsc();\r\n      setSortDirection(\"desc\");\r\n    } else {\r\n      sortLastNameDesc();\r\n      setSortDirection(\"asc\");\r\n    }\r\n  };\r\n\r\n  const sortLastNameDesc = () => {\r\n    const usersSpread = [...users];\r\n    usersSpread.sort((a, b) => {\r\n      const nameA = a.name.last;\r\n      const nameB = b.name.last;\r\n\r\n      if (nameA > nameB) return -1;\r\n      if (nameA < nameB) return 1;\r\n      return 0;\r\n    });\r\n    setUsersToDisplay(usersSpread);\r\n  };\r\n\r\n  const sortLastNameAsc = () => {\r\n    const usersSpread = [...users];\r\n    usersSpread.sort((a, b) => {\r\n      const nameA = a.name.last;\r\n      const nameB = b.name.last;\r\n\r\n      if (nameA < nameB) return -1;\r\n      if (nameA > nameB) return 1;\r\n      return 0;\r\n    });\r\n    setUsersToDisplay(usersSpread);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n    const filteredUsers = users.filter((user) => {\r\n        return user.phone.includes(searchTerm)\r\n    });\r\n    setUsersToDisplay(filteredUsers);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"text-end\">\r\n          <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            placeholder=\"Search by phone number\"\r\n            name=\"searchTerm\"\r\n            value={searchTerm}\r\n            onChange={(e) => {\r\n                setSearchTerm(e.target.value);\r\n            }}\r\n            ></input>\r\n            <button className=\"btn btn-dark btn-sm\">Search</button>\r\n        </form>\r\n      </div>\r\n      <div>\r\n        <table className=\"table table-dark table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">ID</th>\r\n              <th scope=\"col\">Photo</th>\r\n              <th scope=\"col\">First</th>\r\n              <th scope=\"col\" onClick={sortLastName}>\r\n                Last\r\n              </th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Phone</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {usersToDisplay.map((user) => (\r\n              <tr key=\"index\">\r\n                <th scope=\"row\">{user.id.value}</th>\r\n                <td>\r\n                  <img\r\n                    src={user.picture.thumbnail}\r\n                    alt=\"thumbnail for user\"\r\n                  ></img>\r\n                </td>\r\n                <td>{user.name.first}</td>\r\n                <td>{user.name.last}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.phone}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeTable;\r\n","import EmployeeTable from './components/EmployeeTable/EmployeeTable'\nfunction App() {\n  return (\n    <div className=\"container\">\n      <EmployeeTable />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}